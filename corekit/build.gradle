plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'maven-publish'
}

def GROUP='org.jxxy.debug'
def MODULE='corekit'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion

    buildFeatures {
        viewBinding = true
    }

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        buildConfigField("String", "TAG", "\"${MODULE}\"")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    api dep.supportDesign
    api dep.supportV7
    api dep.supportCardview
    api dep.supportConstraintLayout
    testImplementation dep.junit

    api dep.supportConstraintLayout
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    api 'androidx.lifecycle:lifecycle-common-java8:2.2.0'
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    api "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    api 'com.orhanobut:logger:2.2.0'
    //协程依赖
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.7'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.7'
    //viewmodels
    api 'androidx.activity:activity-ktx:1.1.0'
    api 'com.squareup.okhttp3:okhttp:4.3.1'
    api 'com.squareup.retrofit2:retrofit:2.6.2'
    api 'com.squareup.retrofit2:converter-gson:2.6.2'
    api 'com.squareup.retrofit2:adapter-rxjava:2.6.2'
    api 'com.squareup.retrofit2:converter-scalars:2.6.2'
    api 'com.squareup.okhttp3:logging-interceptor:4.3.1'
    //数据解析
    api 'com.google.code.gson:gson:2.7'

    //图片加载框架
    api 'com.github.bumptech.glide:glide:4.9.0'
    //SmartRefreshLayout
    api 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.3'
}

task androidSourcesJar(type: Jar) {
    // 如果有Kotlin那么就需要打入dir : getSrcDirs
    if (project.hasProperty("kotlin")) {
        from android.sourceSets.main.java.getSrcDirs()
    } else if (project.hasProperty("android")) {
        from android.sourceSets.main.java.sourceFiles
    } else {
        from sourceSets.main.allSource
    }
    archiveClassifier.set('sources')
}

def versionCode="1.0.0.19"
def snapshotEnable=true

afterEvaluate {
    publishing {
        //发布的 jar 包配置
        publications {
            //release这个名称可以替换，会生成对应的publishXXXPublicationToMaven的两个Task
            release(MavenPublication) {
                //aar 文件
                from components.release
                // 上传source，这样使用方可以看到方法注释，使用上面的 androidSourcesJar Task
                artifact androidSourcesJar
                groupId = GROUP
                artifactId = MODULE
                version = "$versionCode${snapshotEnable?'-SNAPSHOT':''}"
            }
        }
        //仓库地址配置
        repositories {
            maven {
                // 凭证
                credentials {
                    username MAVEN_USER// 仓库发布用户名
                    password MAVEN_PWD // 仓库发布用户密码
                }
                // 地址 REPOSITORY_SNAPSHOT，REPOSITORY
                url MAVEN_URL
                //允许http
                allowInsecureProtocol true
            }
        }
    }
}